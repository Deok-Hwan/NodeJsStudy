01. 인트로
01-1 노드란 무엇일까?
 동기 방식의 시스템을 비동기 방식으로 작업을 진행하기 위한 개발 도구.
비동기방식 : 다른 작업을 진행하는 중간에 파일 시스템에서 파일 처리를 하는 것. 프로그램에서 해당 파일의 내용을 처리할 수 있는 시점이 되면 콜백 함수가 호출된다. 프로그램에서는 파일 읽기 요청을 하기 전에 콜백함수를 등록하는데, 파일 시스템은 파일 처리가 끝나면 자동으로 콜백 함수를 호출한다. 따라서 프로그램이 파일 읽기 작업이 끝날 때까지 대기하지 않아도 파일을 다 읽은 시점에 통보를 받고 파일의 내용을 화면에 보여 주는 작업을 진행 할 수 있다.

동기 입출력 방식

var contents = file.read("a.txt");
         - 대기 -
doShow(contents);
var result = doAdd(10, 10);

비동기 입출력 방식
file.read("a.txt",function(contents){
	doShow(contents);
});
var result = doAdd(10, 10);
파일 시스템이 이벤트와 함께 호출하는 방식이면 이벤트 기반 입출력(Event driven I/O)모델 이라고 부릅니다. 노드는 비동기 방식으로 사용하는 이벤트 기반 입출력 모델입니다. 
V8 엔진은 자바스크립트 코드를 네이티브 코드로 바꾼 후 실행할 수 있는데, 노드는 이 V8엔진을 이용해 자바스크립트 코드를 빠르게 실행할 수 있습니다.  노드를 설치한 다음 노드로 프로그램을 만들어 실행하면 크롬 V8엔진 위에서 실행됩니다 V8 엔진에는 필요한 기능을 병렬로 실행하는 '스레드 풀'과 이벤트를 받아 처리하는 '이벤트 루프' 등의 기본 기능이 있으며, 그 위에 네트워킹 기능을 담당하는 소켓, http 라이브러리 들이 있습니다. 
 노드 프로그램이 동작할 수 있도록 만든 아키텍처에서 가장 중요한 부분 중 하나가 이벤트를 받아 처리하는 기능입니다. 특히 노드는 서버 쪽에서 동작하는 프로그램을 만드는 것이 주 임무이기 때문에 기본 기능인 소켓이나 HTTP 프로토콜을 사용해 데이터를 송수신하는 기능을 포함하고 있습니다. 따라서 데이터 송수신 부분에도 이벤트 처리방식을 그대로 사용할 수 있습니다.
 http 객체는 HTTP 프로토콜로 웹 서버에 데이터를 요청할 수 있는 기능이 있습니다. request() 함수를 호출하여 웹 서버에 데이터를 요청할 수 있고 응답을 받으면 콜백 함수가 자동으로 호출됩니다. 응답을 처리할 수 있는 콜백 함수는 res라는 이름의 객체를 전달받는데, 이 res 객체는 수신한 데이터를 이벤트 이름으로 구별할 수 있습니다. 예를 들어, data 이벤트가 있을 때 이 이벤트 이름으로 콜백 함수를 등록하면, 등록한 콜백 함수에 data 이벤트로 전달된 응답 데이터가 전달됩니다. 

자바스크립트에는 on() 메소드를 사용해 이벤트를 콜백 함수와 바인딩(Binding) 할 수 있습니다. 따라서 응답 객체인 res 객체의 on() 메소드를 사용해 data 이벤트와 콜백 함수를 바인딩하면 data라는 이름의 이벤트를 받았을 때 등록한 콜백 함수가 실행됩니다. 앞에서 살펴본 코드에서는 이벤트 이름이 data이며 응답으로 받은 데이터는 chunk 변수에 들어 있습니다. 
 - 이벤트를 바인딩한다는 것은 어떤 의미일까.
 바인딩이란 서로 묶어서 연결해 준다는 의미이다. 예를 들어, 버튼이 하나 있는데 이 버튼을 클릭했을 때 click 이벤트가 발생한다고 가정하자. 이 때 click 이벤트를 함수 객체와 바인딩하면 click 이벤트가 발생했을 때 등록한 함수 객체가 실행된다. 즉, 사용자가 이 버튼을 클릭하면 이 함수가 실행된다.
 [객체].on([이벤트이름].[함수 객체]);
 res.on('data',function(){...});
 - 노드의 세 가지 주요 특징
1. 모듈과 패키지
2. 비동기 입출력
3. 이벤트 기반 입출력

개발 도구 설치하기
1. 브라켓 설치
2. 크롬 브라우저 설치
3. 기본적인 브라켓 사용방법 알아보기
4. 노드를 설치
